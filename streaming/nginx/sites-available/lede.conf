##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

	location /of2016status {
		stub_status on;
		access_log off;
	}

#	# disable graphite as it does not work ok with tessera in subdirectory
#	# serve static content via nginx and not uwsgi
#	location /content/ {
#		alias /opt/graphite/webapp/content/;
#	}
#
#	# fix the django/graphite bug for admin
#	# and serve via nginx
#	rewrite ^/admin(.*)admin/([^/]+)/([^/]+)\$ /media/\$2/\$3 redirect;
#	location /media/ {
#		alias /usr/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin/;
#	}
#
#	# finally pass everything to uwsgi
#	location ~* ^/(graphite|metrics|dashboard|render|browser|composer) {
#		add_header Access-Control-Allow-Origin $http_origin;
#		include uwsgi_params;
#		uwsgi_pass 127.0.0.1:3031;
#	}

	# proxy nagios
	location /nagios3 {
		proxy_pass http://localhost:8081/nagios3;
	}

	location /cgi-bin/nagios3 {
		proxy_pass http://localhost:8081/cgi-bin/nagios3;
	}

	location /grafana/ {
		proxy_pass http://localhost:3000/;
		proxy_set_header   Host $host;
	}
}


